[
  {
    "description": "  In order to keep Regres api stable\n  As a tester\n  I want to make sure that everything works as expected",
    "elements": [
      {
        "description": "",
        "id": "regres;get-a-user",
        "keyword": "Scenario",
        "line": 7,
        "name": "Get A User",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 12623600
            }
          },
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 88400
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "I make a GET request to /api/users/1",
            "match": {
              "location": "src\\steps\\steps.js:10"
            },
            "result": {
              "status": "passed",
              "duration": 756099
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 9,
            "name": "I receive a response",
            "match": {
              "location": "src\\steps\\steps.js:58"
            },
            "result": {
              "status": "passed",
              "duration": 155362300
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 10,
            "name": "I expect response should have a status 200",
            "match": {
              "location": "src\\steps\\steps.js:66"
            },
            "result": {
              "status": "passed",
              "duration": 393400
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 11,
            "name": "I expect response to match a json snapshot user-1",
            "match": {
              "location": "src\\steps\\steps.js:62"
            },
            "result": {
              "status": "passed",
              "duration": 2915600
            }
          },
          {
            "arguments": [
              {
                "content": "{\n  \"id\":1,\n  \"email\":\"george.bluth@reqres.in\",\n  \"first_name\":\"George\",\n  \"last_name\":\"Bluth\",\n  \"avatar\":\"https://reqres.in/img/faces/1-image.jpg\"\n}",
                "line": 13
              }
            ],
            "keyword": "And ",
            "line": 12,
            "name": "I expect response should have a json at data",
            "match": {
              "location": "src\\steps\\steps.js:86"
            },
            "result": {
              "status": "passed",
              "duration": 1606299
            }
          },
          {
            "arguments": [
              {
                "content": "{\n  \"data\": {\n    \"id\": 1,\n    \"first_name\": \"George\"\n  }\n}",
                "line": 23
              }
            ],
            "keyword": "And ",
            "line": 22,
            "name": "I expect response should have a json like",
            "match": {
              "location": "src\\steps\\steps.js:90"
            },
            "result": {
              "status": "passed",
              "duration": 655600
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 181799
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 346300
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "regres;list-users",
        "keyword": "Scenario",
        "line": 32,
        "name": "List Users",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 524100
            }
          },
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 57399
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I make a GET request to /api/users",
            "match": {
              "location": "src\\steps\\steps.js:10"
            },
            "result": {
              "status": "passed",
              "duration": 95499
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 34,
            "name": "I set query param page to 2",
            "match": {
              "location": "src\\steps\\steps.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 190200
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 35,
            "name": "I receive a response",
            "match": {
              "location": "src\\steps\\steps.js:58"
            },
            "result": {
              "status": "passed",
              "duration": 15191199
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 36,
            "name": "I expect response should have a status 200",
            "match": {
              "location": "src\\steps\\steps.js:66"
            },
            "result": {
              "status": "passed",
              "duration": 126300
            }
          },
          {
            "arguments": [
              {
                "content": "{\n  \"page\": 2\n}",
                "line": 38
              }
            ],
            "keyword": "And ",
            "line": 37,
            "name": "I expect response should have a json like",
            "match": {
              "location": "src\\steps\\steps.js:90"
            },
            "result": {
              "status": "passed",
              "duration": 173999
            }
          },
          {
            "arguments": [
              {
                "content": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"page\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                "line": 44
              }
            ],
            "keyword": "And ",
            "line": 43,
            "name": "I expect response should have a json schema",
            "match": {
              "location": "src\\steps\\steps.js:98"
            },
            "result": {
              "status": "passed",
              "duration": 13856300
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 54,
            "name": "I store response at data[0].id as UserId",
            "match": {
              "location": "src\\steps\\steps.js:122"
            },
            "result": {
              "status": "passed",
              "duration": 1130900
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 25199
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 222199
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "regres;get-a-user-with-id",
        "keyword": "Scenario",
        "line": 56,
        "name": "Get A User With Id",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 410799
            }
          },
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 34599
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 57,
            "name": "I make a GET request to /api/users/{id}",
            "match": {
              "location": "src\\steps\\steps.js:10"
            },
            "result": {
              "status": "passed",
              "duration": 70999
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 58,
            "name": "I set path param id to $S{UserId}",
            "match": {
              "location": "src\\steps\\steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 135600
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 59,
            "name": "I receive a response",
            "match": {
              "location": "src\\steps\\steps.js:58"
            },
            "result": {
              "status": "passed",
              "duration": 24090400
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 60,
            "name": "I expect response should have a status 200",
            "match": {
              "location": "src\\steps\\steps.js:66"
            },
            "result": {
              "status": "passed",
              "duration": 95900
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 61,
            "name": "I expect response header content-type should have application/json; charset=utf-8",
            "match": {
              "location": "src\\steps\\steps.js:74"
            },
            "result": {
              "status": "passed",
              "duration": 330699
            }
          },
          {
            "arguments": [
              {
                "content": "{\n  \"data\": {\n    \"id\": 7\n  }\n}",
                "line": 63
              }
            ],
            "keyword": "And ",
            "line": 62,
            "name": "I expect response should have a json like",
            "match": {
              "location": "src\\steps\\steps.js:90"
            },
            "result": {
              "status": "passed",
              "duration": 113800
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 35499
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 210299
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "regres;create-a-user",
        "keyword": "Scenario",
        "line": 71,
        "name": "Create A User",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 346600
            }
          },
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 28299
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 72,
            "name": "I make a POST request to /api/users",
            "match": {
              "location": "src\\steps\\steps.js:10"
            },
            "result": {
              "status": "passed",
              "duration": 117799
            }
          },
          {
            "arguments": [
              {
                "content": "{\n  \"name\": \"morpheus\",\n  \"job\": \"leader\"\n}",
                "line": 74
              }
            ],
            "keyword": "And ",
            "line": 73,
            "name": "I set body to",
            "match": {
              "location": "src\\steps\\steps.js:34"
            },
            "result": {
              "status": "passed",
              "duration": 140799
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 80,
            "name": "I receive a response",
            "match": {
              "location": "src\\steps\\steps.js:58"
            },
            "result": {
              "status": "passed",
              "duration": 516049399
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 81,
            "name": "I expect response should have a status 201",
            "match": {
              "location": "src\\steps\\steps.js:66"
            },
            "result": {
              "status": "passed",
              "duration": 731999
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 82,
            "name": "I expect response time should be less than 3000 ms",
            "match": {
              "location": "src\\steps\\steps.js:118"
            },
            "result": {
              "status": "passed",
              "duration": 310100
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 18900
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 282400
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "regres",
    "line": 1,
    "keyword": "Feature",
    "name": "Regres",
    "tags": [],
    "uri": "src\\features\\Regres.feature"
  }
]